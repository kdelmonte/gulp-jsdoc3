{"version":3,"sources":["gulp-jsdoc.js"],"names":[],"mappings":"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","file":"gulp-jsdoc.js","sourcesContent":["import map from 'map-stream';\r\nimport tmp from 'tmp';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport gutil from 'gulp-util';\r\nimport Promise from 'bluebird';\r\nvar os = require('os').type();\r\n\r\nvar debug = require('debug')('gulp-jsdoc3');\r\n\r\n/**\r\n * @callback gulpDoneCallback\r\n */\r\n\r\n/**\r\n * A wrapper around jsdoc cli.\r\n *\r\n * This function collects all filenames. Then runs:\r\n * ```jsdoc -c config -t node_modules/ink-docstrap/template gulpFile1 gulpFile2```\r\n * @example\r\n * gulp.src(['README.md', 'src/*.js']), {read: false}).pipe(\r\n *     jsdoc(options, cb)\r\n * );\r\n *\r\n * @param {Object} [config=require('./jsdocConfig.json')]\r\n * @param {gulpDoneCallback} done\r\n * @returns {*|SignalBinding}\r\n */\r\nexport function jsdoc(config, done) {\r\n    var files = [];\r\n    var jsdocConfig = config || require('./jsdocConfig.json');\r\n    var hasUserSpecifiedTemplate = jsdocConfig.templates && jsdocConfig.templates.default && jsdocConfig.templates.default.layoutFile;\r\n    var args;\r\n\r\n    // Prevent some errors\r\n    if (typeof done !== 'function') {\r\n        done = function () {\r\n        };\r\n    }\r\n\r\n    debug('Config:\\n' + JSON.stringify(jsdocConfig, undefined, 2));\r\n\r\n    return map(function (file, callback) {\r\n        files.push(file.path);\r\n        callback(null, file);\r\n    }).on('end', function () {\r\n        // We use a promise to prevent multiple dones (normal cause error then close)\r\n        new Promise(function (resolve, reject) {\r\n            if (files.length === 0) {\r\n                const errMsg = 'JSDoc Error: no files found to process';\r\n                gutil.log(gutil.colors.red(errMsg));\r\n                gutil.beep();\r\n                reject(new Error(errMsg));\r\n            }\r\n\r\n            const tmpobj = tmp.fileSync();\r\n            debug('Documenting files: ' + files.join(' '));\r\n            fs.writeFile(tmpobj.name, JSON.stringify(jsdocConfig), 'utf8', function (err) {\r\n                // We couldn't write the temp file\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n\r\n                const spawn = require('child_process').spawn,\r\n                    cmd = require.resolve('jsdoc/jsdoc.js'), // Needed to handle npm3 - find the binary anywhere\r\n                    inkdocstrap = path.dirname(require.resolve('ink-docstrap'));\r\n                // Config + ink-docstrap\r\n                args = ['-c', tmpobj.name];\r\n                \r\n                if(!hasUserSpecifiedTemplate){\r\n                    args = args.concat(['-t', inkdocstrap]);\r\n                }                \r\n\r\n                args = args.concat(files);\r\n\r\n                debug(cmd + ' ' + args.join(' '));\r\n\r\n                const child = os === 'Windows_NT'\r\n                    ? spawn(process.execPath, [cmd].concat(args), {cwd: process.cwd()})\r\n                    : spawn(cmd, args, {cwd: process.cwd()}); // unix\r\n                child.stdout.setEncoding('utf8');\r\n                child.stderr.setEncoding('utf8');\r\n                child.stdout.on('data', function (data) {\r\n                    gutil.log(data);\r\n                });\r\n                child.stderr.on('data', function (data) {\r\n                    gutil.log(gutil.colors.red(data));\r\n                    gutil.beep();\r\n                });\r\n                child.on('close', function (code) {\r\n                    if (code === 0) {\r\n                        gutil.log('Documented ' + files.length + ' files!');\r\n                        resolve();\r\n                    } else {\r\n                        gutil.log(gutil.colors.red('JSDoc returned with error code: ' + code));\r\n                        gutil.beep();\r\n                        reject(new Error('JSDoc closed with error code: ' + code));\r\n                    }\r\n                });\r\n                child.on('error', function (error) {\r\n                    gutil.log(gutil.colors.red('JSDoc Error: ' + error));\r\n                    gutil.beep();\r\n                    reject(new Error(error));\r\n                });\r\n            });\r\n        }).then(result => done(result)).catch(err => done(err));\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}